stages:
  - build
  - deploy

build_linux:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-toolchain
  tags:
    - build

  artifacts:
    paths:
      - dist
      - .config
    expire_in: 2 weeks

  variables:
    GIT_STRATEGY: fetch

  script:
    # Configure and install crosstool-NG
    - ./bootstrap
    - ./configure --enable-local
    - make install
    # Use xtensa-esp32-elf sample by default
    - ./ct-ng xtensa-esp32-elf
    # Override some options
    - echo "CT_LOG_PROGRESS_BAR=n" >> .config
    - echo "CT_INSTALL_DIR_RO=y" >> .config
    - echo "CT_ALLOW_BUILD_AS_ROOT=y" >> .config
    - echo "CT_ALLOW_BUILD_AS_ROOT_SURE=y" >> .config
    - echo "CT_LOG_EXTRA=y" >> .config
    - echo "CT_LOG_LEVEL_MAX=\"EXTRA\"" >> .config
    # Update .config file
    - ./ct-ng oldconfig
    # Download tarballs and place them into the build directory
    - wget https://ci.espressif.cn:42348/cache/ct-ng-tarballs.tar
    - test "$(shasum -a 256 ct-ng-tarballs.tar | cut -d ' ' -f 1)" = "9b3a5662474bbc53613b6d4d2ef00e7767e0e1c1f20dfed1193654739506a3ce"
    - mkdir -p .build/tarballs
    - cd .build/tarballs
    - tar xvf ../../ct-ng-tarballs.tar
    - cd ../../
    # Run the build
    - ./ct-ng build
    # Package the toolchain
    - export REL_NAME=xtensa-esp32-elf-linux64-`git describe --always`
    - cd builds
    - tar czvf ${REL_NAME}.tar.gz xtensa-esp32-elf/
    - cd ../
    - mkdir -p dist
    - mv builds/${REL_NAME}.tar.gz dist/



build_windows:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-toolchain
  tags:
    - build

  artifacts:
    paths:
      - dist
      - .config
    expire_in: 2 weeks

  variables:
    GIT_STRATEGY: fetch

  script:

    # Configure and install crosstool-NG
    - ./bootstrap
    - ./configure --enable-local
    - make install
    # Use xtensa-esp32-elf sample by default
    - ./ct-ng xtensa-esp32-elf
    # Override some options
    - echo "CT_LOG_PROGRESS_BAR=n" >> .config
    - echo "CT_INSTALL_DIR_RO=y" >> .config
    - echo "CT_ALLOW_BUILD_AS_ROOT=y" >> .config
    - echo "CT_ALLOW_BUILD_AS_ROOT_SURE=y" >> .config
    - echo "CT_LOG_EXTRA=y" >> .config
    - echo "CT_LOG_LEVEL_MAX=\"EXTRA\"" >> .config
    # Override options specific for Windows
    - echo "CT_CANADIAN=y" >> .config
    - echo "CT_WANTS_STATIC_LINK=y" >> .config
    - echo "CT_STATIC_TOOLCHAIN=y" >> .config
    - echo "CT_HOST=\"i686-pc-mingw32\"" >> .config
    - echo "CT_HOST_PREFIX=\"i686-w64-mingw32-\"" >> .config
    - echo "CT_HOST_SUFFIX=\"\"" >> .config
    - echo "CT_GDB_CROSS_STATIC=y" >> .config
    - echo "# CT_GDB_CROSS_PYTHON is not set" >> .config
    # Update .config file
    - ./ct-ng oldconfig
    # Download tarballs and place them into the build directory
    - wget https://ci.espressif.cn:42348/cache/ct-ng-tarballs.tar
    - test "$(shasum -a 256 ct-ng-tarballs.tar | cut -d ' ' -f 1)" = "9b3a5662474bbc53613b6d4d2ef00e7767e0e1c1f20dfed1193654739506a3ce"
    - mkdir -p .build/tarballs
    - cd .build/tarballs
    - tar xvf ../../ct-ng-tarballs.tar
    - cd ../../
    # Run the build
    - ./ct-ng build
    # Package the toolchain
    - export REL_NAME=xtensa-esp32-elf-win32-`git describe --always`
    - cd builds
    - zip -r ${REL_NAME}.zip xtensa-esp32-elf/
    - cd ../
    - mkdir -p dist
    - mv builds/${REL_NAME}.zip dist/
